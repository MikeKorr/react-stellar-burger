{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0438\\u0445\\u0430\\u0438\\u043B\\\\dev\\\\stellar-burgers\\\\src\\\\components\\\\app\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./app.module.css\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport AppMain from \"../AppMain/AppMain\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Overlay from \"../Overlay/Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsloading] = useState(false);\n  const [ingridientList, setingridientList] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    setIsloading(true);\n    fetch(\"https://norma.nomoreparties.space/api/ingredients\").then(res => {\n      res.json().then(data => {\n        setingridientList(data.data);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppMain, {\n      ing: ingridientList,\n      setIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        data: ingridientList,\n        setIsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        setIsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rIhAOglps1CJzlAX4cFcuvkcfgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","AppHeader","AppMain","React","useEffect","useState","Modal","Overlay","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","setIsloading","ingridientList","setingridientList","isModalOpen","setIsModalOpen","fetch","then","res","json","data","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","ing","_c","$RefreshReg$"],"sources":["C:/Users/Михаил/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import styles from \"./app.module.css\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport AppMain from \"../AppMain/AppMain\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Overlay from \"../Overlay/Overlay\";\r\n\r\nfunction App() {\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [ingridientList, setingridientList] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsloading(true);\r\n    fetch(\"https://norma.nomoreparties.space/api/ingredients\").then((res) => {\r\n      res.json().then((data) => {\r\n        setingridientList(data.data);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <AppHeader />\r\n      <AppMain ing={ingridientList} setIsModalOpen={setIsModalOpen} />\r\n      {isModalOpen && (\r\n        <>\r\n          <Modal data={ingridientList} setIsModalOpen={setIsModalOpen} />\r\n          <Overlay setIsModalOpen={setIsModalOpen} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,IAAI,CAAC;IAClBK,KAAK,CAAC,mDAAmD,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACvEA,GAAG,CAACC,IAAI,EAAE,CAACF,IAAI,CAAEG,IAAI,IAAK;QACxBP,iBAAiB,CAACO,IAAI,CAACA,IAAI,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,SAAS,EAAEzB,MAAM,CAAC0B,GAAI;IAAAC,QAAA,gBACzBlB,OAAA,CAACR,SAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbtB,OAAA,CAACP,OAAO;MAAC8B,GAAG,EAAEhB,cAAe;MAACG,cAAc,EAAEA;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC/Db,WAAW,iBACVT,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA,CAACH,KAAK;QAACkB,IAAI,EAAER,cAAe;QAACG,cAAc,EAAEA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/DtB,OAAA,CAACF,OAAO;QAACY,cAAc,EAAEA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,gBAE9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAAClB,EAAA,CA1BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}